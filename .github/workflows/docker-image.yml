name: Docker Image CI mailoney

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

  pull_request:
    branches:
     - main
    tags:
      - "v*.*.*"
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Find last Tag of Github Repo
      id: lasttag
      uses: oprypin/find-latest-tag@v1
      with:
        repository: armedpot/mailoney

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: armedpot/ewsposter
        tags: |
          type=raw,latest
          type=sha,format=long
          type=semver,pattern={{version}},value=${{ steps.lasttag.outputs.tag }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        build-args: |
          TITLE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.title'] }}
          DESCRIPTION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.description'] }}
          URL=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.url'] }}
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          CREATED=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          LICENSES=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.licenses'] }}

    - name: Action checkout
      uses: actions/checkout@v2

    - name: Docker Hub Description
      uses: peter-evans/dockerhub-description@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        repository: armedpot/ewsposter
        short-description: ${{ github.event.repository.description }}

